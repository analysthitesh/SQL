-- Standardise Date Format, removing the time (Method_1)

SELECT SALEDATE, CONVERT(DATE,SALEDATE) AS SALE_DATE
FROM HOUSE

UPDATE HOUSE
SET SALEDATE = CONVERT(DATE,SALEDATE)

-- Populate property address data, the one with same parcel id can be populated 

SELECT A.PARCELID, A.PROPERTYADDRESS, B.PARCELID, B.PROPERTYADDRESS
FROM HOUSE AS A
JOIN HOUSE AS B
ON A.PARCELID = B.PARCELID
and A.UNIQUEID <> B.UNIQUEID
WHERE A.PROPERTYADDRESS IS NULL


UPDATE A
SET PROPERTYADDRESS = ISNULL(A.PROPERTYADDRESS, B.PROPERTYADDRESS)
FROM HOUSE AS A
JOIN HOUSE AS B
ON A.PARCELID = B.PARCELID
and A.UNIQUEID <> B.UNIQUEID
WHERE A.PROPERTYADDRESS IS NULL

-- Breaking out Property Address into individual columns (address, city). Used substring and character index

SELECT
SUBSTRING (PROPERTYADDRESS, 1, CHARINDEX(',',PROPERTYADDRESS)-1) AS 'Street_Name',
SUBSTRING (PROPERTYADDRESS, CHARINDEX(',',PROPERTYADDRESS) +1, LEN(PROPERTYADDRESS)) AS 'City'
FROM House;

ALTER TABLE HOUSE
ADD Street_Name NVARCHAR(255);

UPDATE HOUSE
SET Street_Name = SUBSTRING (PROPERTYADDRESS, 1, CHARINDEX(',',PROPERTYADDRESS)-1)

ALTER TABLE HOUSE
ADD City NVARCHAR(255)

UPDATE HOUSE
SET City = SUBSTRING (PROPERTYADDRESS, CHARINDEX(',',PROPERTYADDRESS) +1, LEN(PROPERTYADDRESS));

SELECT * 
FROM HOUSE

-- Breaking out the Owner address into street name, city, state. Using Parse Name

SELECT OWNERADDRESS
FROM HOUSE

SELECT 
PARSENAME(REPLACE(OWNERADDRESS, ',', '.'),3),
PARSENAME(REPLACE(OWNERADDRESS, ',','.'),2),
PARSENAME(REPLACE(OWNERADDRESS, ',','.'),1)
FROM HOUSE;

ALTER TABLE HOUSE
ADD Owner_Street_name NVARCHAR(255);

UPDATE HOUSE
SET Owner_Street_name = PARSENAME(REPLACE(OWNERADDRESS, ',', '.'),3);

ALTER TABLE HOUSE
ADD Owner_City NVARCHAR(50);

UPDATE HOUSE
SET Owner_City = PARSENAME(REPLACE(OWNERADDRESS, ',','.'),2)

ALTER TABLE HOUSE
ADD Owner_State NVARCHAR(50)

UPDATE HOUSE
SET Owner_State = PARSENAME(REPLACE(OWNERADDRESS, ',','.'),1)

SELECT Owner_Street_Name, Owner_City, Owner_State
FROM HOUSE

--Change Y and N to Yes and No in "Sold as Vacant" Field 

SELECT SOLDASVACANT,
CASE WHEN SOLDASVACANT ='Y' THEN 'Yes'
	WHEN SOLDASVACANT = 'N' THEN 'No'
	ELSE SOLDASVACANT
	END
FROM HOUSE 

UPDATE HOUSE
SET SOLDASVACANT = CASE WHEN SOLDASVACANT ='Y' THEN 'Yes'
	WHEN SOLDASVACANT = 'N' THEN 'No'
	ELSE SOLDASVACANT
	END

SELECT SOLDASVACANT
FROM HOUSE;

--Remove duplicates

WITH Duplicate AS (SELECT *,
ROW_NUMBER() OVER (
PARTITION BY PARCELID, PROPERTYADDRESS, SALEPRICE, SALEDATE, LEGALREFERENCE
ORDER BY UNIQUEID) AS 'Row_Number'
FROM HOUSE)
DELETE FROM DUPLICATE
WHERE ROW_NUMBER > 1

-- Delete Unused columns

ALTER TABLE HOUSE
DROP COLUMN OWNERADDRESS, TAXDISTRICT, PROPERTYADDRESS






